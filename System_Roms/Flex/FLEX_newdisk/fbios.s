* 6809 assembly program generated by cmoc 0.1.90


	SECTION	code


_getCharNoEcho	EXPORT


*******************************************************************************

* FUNCTION getCharNoEcho(): defined at fbios.c:53
_getCharNoEcho	EQU	*
* Prototype: char getCharNoEcho(void)
* Assembly-only function.
* Line fbios.c:54: inline assembly
* Inline assembly:


            JSR [0xD3E5]
            TFR A,B
    

* End of inline assembly.
* Useless label L00001 removed
	RTS
* END FUNCTION getCharNoEcho(): defined at fbios.c:53
funcend_getCharNoEcho	EQU *
funcsize_getCharNoEcho	EQU	funcend_getCharNoEcho-_getCharNoEcho
_getChar	EXPORT


*******************************************************************************

* FUNCTION getChar(): defined at fbios.c:61
_getChar	EQU	*
* Prototype: char getChar(void)
* Assembly-only function.
* Line fbios.c:62: inline assembly
* Inline assembly:


            JSR [0xD3FB]
            TFR A,B
    

* End of inline assembly.
* Useless label L00002 removed
	RTS
* END FUNCTION getChar(): defined at fbios.c:61
funcend_getChar	EQU *
funcsize_getChar	EQU	funcend_getChar-_getChar
_getTerminalState	EXPORT


*******************************************************************************

* FUNCTION getTerminalState(): defined at fbios.c:69
_getTerminalState	EQU	*
* Prototype: char getTerminalState(void)
* Assembly-only function.
* Line fbios.c:70: inline assembly
* Inline assembly:


            CLRB ; asume there is no character waiting 'false'
            JSR [0xD3F7] ; call the status routine
            BEQ ENDSTATE ; if no character is waiting, branch to endstate
            INCB ; character wating set to 'true'
        ENDSTATE:
    

* End of inline assembly.
* Useless label L00003 removed
	RTS
* END FUNCTION getTerminalState(): defined at fbios.c:69
funcend_getTerminalState	EQU *
funcsize_getTerminalState	EQU	funcend_getTerminalState-_getTerminalState
_outChar	EXPORT


*******************************************************************************

* FUNCTION outChar(): defined at fbios.c:84
_outChar	EQU	*
* Prototype: void outChar(char)
* Assembly-only function.
* Line fbios.c:85: inline assembly
* Inline assembly:


            LDA 3,S ; load the character to output into A.
            JSR [0xD3F9] ; call the output character routine
    

* End of inline assembly.
* Useless label L00004 removed
	RTS
* END FUNCTION outChar(): defined at fbios.c:84
funcend_outChar	EQU *
funcsize_outChar	EQU	funcend_outChar-_outChar
_exitMON	EXPORT


*******************************************************************************

* FUNCTION exitMON(): defined at fbios.c:94
_exitMON	EQU	*
* Prototype: void exitMON(void)
* Assembly-only function.
* Line fbios.c:95: inline assembly
* Inline assembly:


            JMP [0xD3F3] ; jump to the monitor address
    

* End of inline assembly.
* Useless label L00005 removed
	RTS
* END FUNCTION exitMON(): defined at fbios.c:94
funcend_exitMON	EQU *
funcsize_exitMON	EQU	funcend_exitMON-_exitMON
_exitFLEX	EXPORT


*******************************************************************************

* FUNCTION exitFLEX(): defined at fbios.c:101
_exitFLEX	EQU	*
* Prototype: void exitFLEX(void)
* Assembly-only function.
* Line fbios.c:102: inline assembly
* Inline assembly:


           JMP 0xCD03 ; jump to the flex reset address
    

* End of inline assembly.
* Useless label L00006 removed
	RTS
* END FUNCTION exitFLEX(): defined at fbios.c:101
funcend_exitFLEX	EQU *
funcsize_exitFLEX	EQU	funcend_exitFLEX-_exitFLEX
_readSector	EXPORT


*******************************************************************************

* FUNCTION readSector(): defined at fbios.c:113
_readSector	EQU	*
* Prototype: unsigned char readSector(unsigned char, unsigned char, void *)
* Assembly-only function.
* Line fbios.c:114: inline assembly
* Inline assembly:


           LDA 3,S ; load the track number
           LDB 5,S ; load the sector number
           LDX 6,S ; load the buffer address
           JSR 0xDE00 ; call the read routine

           ;; error code is already in B, which is conviently the return value location

    

* End of inline assembly.
* Useless label L00007 removed
	RTS
* END FUNCTION readSector(): defined at fbios.c:113
funcend_readSector	EQU *
funcsize_readSector	EQU	funcend_readSector-_readSector
_writeSector	EXPORT


*******************************************************************************

* FUNCTION writeSector(): defined at fbios.c:128
_writeSector	EQU	*
* Prototype: unsigned char writeSector(unsigned char, unsigned char, void *)
* Assembly-only function.
* Line fbios.c:129: inline assembly
* Inline assembly:


           LDA 3,S ; load the track number
           LDB 5,S ; load the sector number
           LDX 6,S ; load the buffer address
           JSR 0xDE03 ; call the write routine

           ;; error code is already in B, which is conviently the return value location
    

* End of inline assembly.
* Useless label L00008 removed
	RTS
* END FUNCTION writeSector(): defined at fbios.c:128
funcend_writeSector	EQU *
funcsize_writeSector	EQU	funcend_writeSector-_writeSector
_verifySector	EXPORT


*******************************************************************************

* FUNCTION verifySector(): defined at fbios.c:142
_verifySector	EQU	*
* Prototype: unsigned char verifySector(void)
* Assembly-only function.
* Line fbios.c:143: inline assembly
* Inline assembly:


            JSR 0xDE06 ; call the verify routine

            ;; error code is already in B, which is conviently the return value location

    

* End of inline assembly.
* Useless label L00009 removed
	RTS
* END FUNCTION verifySector(): defined at fbios.c:142
funcend_verifySector	EQU *
funcsize_verifySector	EQU	funcend_verifySector-_verifySector
_rtzDrive	EXPORT


*******************************************************************************

* FUNCTION rtzDrive(): defined at fbios.c:156
_rtzDrive	EQU	*
* Prototype: unsigned char rtzDrive(void *)
* Assembly-only function.
* Line fbios.c:158: inline assembly
* Inline assembly:


            LDX 2,S ; load the drive address
            JSR 0xDE09 ; call the restore routine

            ;; error code is already in B, which is conviently the return value location
    

* End of inline assembly.
* Useless label L00010 removed
	RTS
* END FUNCTION rtzDrive(): defined at fbios.c:156
funcend_rtzDrive	EQU *
funcsize_rtzDrive	EQU	funcend_rtzDrive-_rtzDrive
_setDrive	EXPORT


*******************************************************************************

* FUNCTION setDrive(): defined at fbios.c:168
_setDrive	EQU	*
* Prototype: unsigned char setDrive(void *)
* Assembly-only function.
* Line fbios.c:169: inline assembly
* Inline assembly:


            LDX 2,S ; load the drive address
            JSR 0xDE0C ; call the set drive routine

            ;; error code is already in B, which is conviently the return value location
    

* End of inline assembly.
* Useless label L00011 removed
	RTS
* END FUNCTION setDrive(): defined at fbios.c:168
funcend_setDrive	EQU *
funcsize_setDrive	EQU	funcend_setDrive-_setDrive
_chkDrive	EXPORT


*******************************************************************************

* FUNCTION chkDrive(): defined at fbios.c:179
_chkDrive	EQU	*
* Prototype: unsigned char chkDrive(void *)
* Assembly-only function.
* Line fbios.c:180: inline assembly
* Inline assembly:


            LDX 2,S ; load the drive address
            JSR 0xDE0F ; call the check drive routine

            ;; error code is already in B, which is conviently the return value location

    

* End of inline assembly.
* Useless label L00012 removed
	RTS
* END FUNCTION chkDrive(): defined at fbios.c:179
funcend_chkDrive	EQU *
funcsize_chkDrive	EQU	funcend_chkDrive-_chkDrive
_quickCheckDrive	EXPORT


*******************************************************************************

* FUNCTION quickCheckDrive(): defined at fbios.c:190
_quickCheckDrive	EQU	*
* Prototype: unsigned char quickCheckDrive(void *)
* Assembly-only function.
* Line fbios.c:191: inline assembly
* Inline assembly:


            LDX 2,S ; load the drive address
            JSR 0xDE12 ; call the quick check drive routine

            ;; error code is already in B, which is conviently the return value location
    

* End of inline assembly.
* Useless label L00013 removed
	RTS
* END FUNCTION quickCheckDrive(): defined at fbios.c:190
funcend_quickCheckDrive	EQU *
funcsize_quickCheckDrive	EQU	funcend_quickCheckDrive-_quickCheckDrive
_initDrive	EXPORT


*******************************************************************************

* FUNCTION initDrive(): defined at fbios.c:200
_initDrive	EQU	*
* Prototype: void initDrive(void)
* Assembly-only function.
* Line fbios.c:201: inline assembly
* Inline assembly:


            JSR 0xDE15 ; call the initialize drive routine
    

* End of inline assembly.
* Useless label L00014 removed
	RTS
* END FUNCTION initDrive(): defined at fbios.c:200
funcend_initDrive	EQU *
funcsize_initDrive	EQU	funcend_initDrive-_initDrive
_warmDrive	EXPORT


*******************************************************************************

* FUNCTION warmDrive(): defined at fbios.c:207
_warmDrive	EQU	*
* Prototype: void warmDrive(void)
* Assembly-only function.
* Line fbios.c:208: inline assembly
* Inline assembly:


            JSR 0xDE18 ; call the warm start drive routine
    

* End of inline assembly.
* Useless label L00015 removed
	RTS
* END FUNCTION warmDrive(): defined at fbios.c:207
funcend_warmDrive	EQU *
funcsize_warmDrive	EQU	funcend_warmDrive-_warmDrive
_seekDrive	EXPORT


*******************************************************************************

* FUNCTION seekDrive(): defined at fbios.c:215
_seekDrive	EQU	*
* Prototype: unsigned char seekDrive(unsigned char, unsigned char)
* Assembly-only function.
* Line fbios.c:216: inline assembly
* Inline assembly:


            LDA 3,S ; load the track number
            LDB 5,S ; load the sector number
            JSR 0xDE1B ; call the seek routine

            ;; error code is already in B, which is conviently the return value location
    

* End of inline assembly.
* Useless label L00016 removed
	RTS
* END FUNCTION seekDrive(): defined at fbios.c:215
funcend_seekDrive	EQU *
funcsize_seekDrive	EQU	funcend_seekDrive-_seekDrive


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 0 utility routine(s).


*******************************************************************************

	END
