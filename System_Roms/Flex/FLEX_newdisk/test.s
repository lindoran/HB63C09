* 6809 assembly program generated by cmoc 0.1.90


	SECTION	start


program_start	EXPORT
_main	IMPORT
INILIB	IMPORT
_exit	IMPORT
program_start	EQU	*
	LDD	#-1024		stack space in bytes
	LBSR	INILIB		initialize standard library and global variables
	LBSR	_main		call main()
main_return_address	EQU	*
	PSHS	B,A		send main() return value to exit()
	LBSR	_exit		use LBSR to respect calling convention


	ENDSECTION




	SECTION	code


_chkDrive	IMPORT
_exitFLEX	IMPORT
_exitMON	IMPORT
_fgetNext	IMPORT
_finBuffer	IMPORT
_foutHex	IMPORT
_fputChar	IMPORT
_getChar	IMPORT
_getCharNoEcho	IMPORT
_getTerminalState	IMPORT
_initDrive	IMPORT
_outChar	IMPORT
_pcrlf	IMPORT
_print	IMPORT
_quickCheckDrive	IMPORT
_readSector	IMPORT
_rtzDrive	IMPORT
_seekDrive	IMPORT
_setDrive	IMPORT
_verifySector	IMPORT
_warmDrive	IMPORT
_writeSector	IMPORT
_main	EXPORT


*******************************************************************************

* FUNCTION main(): defined at test.c:6
_main	EQU	*
* Prototype: int main(...)
* Calling convention: 0 (CMOC Default)
	PSHS	U
	LEAU	,S
	LEAS	-152,S
* Local non-static variable(s):
*   -152,U:   17 bytes: test: char[]: line 8
*   -135,U:    1 byte : var: char: line 17
*   -134,U:    2 bytes: memend_struct: unsigned int: line 24
*   -132,U:  129 bytes: input: char[]: line 30
*     -3,U:    2 bytes: i: int: line 31
*     -1,U:    1 byte : ch: char: line 32
* Line test.c:8: init of variable test
	LEAX	S00024,PCR	"hello world \r\n"
	PSHS	X		source array
	LEAX	-152,U		destination byte array test
	LDD	#17		length of string literal + terminating NUL
	LBSR	copyMem
	LEAS	2,S
* Line test.c:9: function call: print()
	LEAX	S00025,PCR	"FLEX New Disk Test Program "
	PSHS	X		C function argument 1 of print(): const char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:10: function call: print()
	LEAX	S00026,PCR	"Version 1.0 \n"
	PSHS	X		C function argument 1 of print(): const char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:11: function call: print()
	LEAX	-152,U		address of array test
	PSHS	X		C function argument 1 of print(): char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:12: function call: fputChar()
	LDB	#$41		decimal 65 signed
	SEX			promoting byte argument to word
	PSHS	B,A		C function argument 1 of fputChar(): char
	LBSR	_fputChar
	LEAS	2,S
* Line test.c:13: function call: pcrlf()
	LBSR	_pcrlf
* Line test.c:16: while
	BRA	L00031		jump to while condition
L00030	EQU	*		while body
L00031	EQU	*		while condition at test.c:16
* Line test.c:16: function call: getTerminalState()
	LBSR	_getTerminalState
	TSTB
	BNE	L00030
* optim: branchToNextLocation
* Useless label L00032 removed
* Line test.c:17: init of variable var
* Line test.c:17: function call: getCharNoEcho()
	LBSR	_getCharNoEcho
	STB	-135,U		variable var
* Line test.c:18: function call: foutHex()
	LEAX	-135,U		variable `var', declared at test.c:17
	PSHS	X		C function argument 1 of foutHex(): char *
	LBSR	_foutHex
	LEAS	2,S
* Line test.c:19: function call: pcrlf()
	LBSR	_pcrlf
* Line test.c:20: function call: outChar()
	LDB	#$41		decimal 65 signed
	SEX			promoting byte argument to word
	PSHS	B,A		C function argument 1 of outChar(): char
	LBSR	_outChar
	LEAS	2,S
* Line test.c:21: function call: pcrlf()
	LBSR	_pcrlf
* Line test.c:24: init of variable memend_struct
	LDD	#$CC00		decimal 52224 unsigned
* Emitted no code to cast `unsigned int' to `struct AnonStruct_ftypes.h:26 *'
	TFR	D,X		X points to a struct AnonStruct_ftypes.h:26
	LDD	43,X		member memory_end of AnonStruct_ftypes.h:26
	STD	-134,U		variable memend_struct
* Line test.c:25: function call: print()
	LEAX	S00027,PCR	"memend (struct): "
	PSHS	X		C function argument 1 of print(): const char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:26: function call: foutHex()
	LEAX	-134,U		variable `memend_struct', declared at test.c:24
	TFR	X,D		address-of operator
* Emitted no code to cast `unsigned int *' to `unsigned char *'
	PSHS	B,A		C function argument 1 of foutHex(): unsigned char *
	LBSR	_foutHex
	LEAS	2,S
* Line test.c:27: function call: foutHex()
* optim: optimizeStackOperations5
* optim: optimizeStackOperations5
* optim: optimizeStackOperations5
	LEAX	-134,U		variable `memend_struct', declared at test.c:24
	TFR	X,D		address-of operator
* Emitted no code to cast `unsigned int *' to `unsigned char *'
	ADDD	#$01		optim: optimizeStackOperations5
	PSHS	B,A		C function argument 1 of foutHex(): unsigned char *
	LBSR	_foutHex
	LEAS	2,S
* Line test.c:28: function call: pcrlf()
	LBSR	_pcrlf
* Line test.c:31: init of variable i
	CLRA
	CLRB
	STD	-3,U		variable i
* Line test.c:34: function call: print()
	LEAX	S00028,PCR	"Type a line and press RETURN: "
	PSHS	X		C function argument 1 of print(): const char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:35: function call: finBuffer()
	LBSR	_finBuffer
* Line test.c:38: while
	BRA	L00034		jump to while condition
L00033	EQU	*		while body
* Line test.c:39: assignment: =
* Line test.c:39: function call: fgetNext()
	LBSR	_fgetNext
	STB	-1,U
* Line test.c:40: if
* optim: storeLoad
	CMPB	#$0D
	BEQ	L00035
* optim: branchToNextLocation
* Useless label L00038 removed
	LDD	#$CC00		decimal 52224 unsigned
* Emitted no code to cast `unsigned int' to `struct AnonStruct_ftypes.h:26 *'
	TFR	D,X		X points to a struct AnonStruct_ftypes.h:26
	LDB	2,X		member ttyset_eol of AnonStruct_ftypes.h:26
	CLRA			promotion of binary operand
	PSHS	B,A
	LDB	-1,U		variable `ch', declared at test.c:32
	SEX			promotion of binary operand
	CMPD	,S++
	BEQ	L00035		 (optim: condBranchOverUncondBranch) (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00036 removed
* Line test.c:41
* optim: condBranchOverUncondBranch
* Useless label L00037 removed
* Useless label L00039 removed
* Line test.c:42: assignment: =
	LDB	-1,U		variable `ch', declared at test.c:32
	PSHS	B
	LDD	-3,U		variable `i', declared at test.c:42
	ADDD	#1
	STD	-3,U
	SUBD	#1		post increment yields initial value
	LEAX	-132,U		address of array input
	LEAX	D,X		add offset
	LDB	,S+
	STB	,X
L00034	EQU	*		while condition at test.c:38
	LDD	-3,U		variable i
	CMPD	#$80
	BLT	L00033
* optim: branchToNextLocation
L00035	EQU	*		after end of while starting at test.c:38
* Line test.c:44: assignment: =
	CLRB
	PSHS	B
	LDD	-3,U		variable i
	LEAX	-132,U		address of array input
	LEAX	D,X		add offset
	LDB	,S+
	STB	,X
* Line test.c:46: function call: print()
	LEAX	S00029,PCR	"You typed: "
	PSHS	X		C function argument 1 of print(): const char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:47: function call: print()
	LEAX	-132,U		address of array input
	PSHS	X		C function argument 1 of print(): char[]
	LBSR	_print
	LEAS	2,S
* Line test.c:48: function call: pcrlf()
	LBSR	_pcrlf
* Line test.c:50: function call: exitFLEX()
	LBSR	_exitFLEX
* Line test.c:51: return with value
	CLRA
	CLRB
* optim: branchToNextLocation
* Useless label L00023 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION main(): defined at test.c:6
funcend_main	EQU *
funcsize_main	EQU	funcend_main-_main


	ENDSECTION




	SECTION	initgl_start


INITGL	EXPORT
INITGL	EQU	*


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*


*******************************************************************************

* STRING LITERALS
S00024	EQU	*
	FCC	"hello world "
	FCB	$0D
	FCB	$0A
	FCB	0
S00025	EQU	*
	FCC	"FLEX New Disk Test Program "
	FCB	0
S00026	EQU	*
	FCC	"Version 1.0 "
	FCB	$0A
	FCB	0
S00027	EQU	*
	FCC	"memend (struct): "
	FCB	0
S00028	EQU	*
	FCC	"Type a line and press RETURN: "
	FCB	0
S00029	EQU	*
	FCC	"You typed: "
	FCB	0
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




	SECTION	initgl_end


	RTS			end of global variable initialization


	ENDSECTION




*******************************************************************************



	SECTION	program_end


program_end	EXPORT
program_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 11 utility routine(s).
_exitFLEX	IMPORT
_fgetNext	IMPORT
_finBuffer	IMPORT
_foutHex	IMPORT
_fputChar	IMPORT
_getCharNoEcho	IMPORT
_getTerminalState	IMPORT
_outChar	IMPORT
_pcrlf	IMPORT
_print	IMPORT
copyMem	IMPORT


*******************************************************************************

	END
