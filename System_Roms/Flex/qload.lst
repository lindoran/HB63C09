                      (        qload.asm):00001                 * QLOAD - QUICK LOADER
                      (        qload.asm):00002                 *
                      (        qload.asm):00003                 * COPYRIGHT (C) 1980 BY
                      (        qload.asm):00004                 * TECHNICAL SYSTEMS CONSULTANTS, INC.
                      (        qload.asm):00005                 * 111 PROVIDENCE RD. CHAPEL HILL, NC 27514
                      (        qload.asm):00006                 * LOADS FLEX FROM DISK ASSUMING THAT THE DISK 1/0
                      (        qload.asm):00007                 * ROUTINES ARE ALREADY IN MEMORY. ASSUMES FLEX
                      (        qload.asm):00008                 * BEGINS ON TRACK #1 SECTOR #1. RETURNS TO
                      (        qload.asm):00009                 * MONITOR ON COMPLETION. BEGIN EXECUTION BY
                      (        qload.asm):00010                 * JUMPING TO LOCATION $C100
                      (        qload.asm):00011                 *
                      (        qload.asm):00012                 
                      (        qload.asm):00013                 * 6800 COMPATIBLITY MACROS:
                      (        qload.asm):00014         
                      (        qload.asm):00015         
                      (        qload.asm):00016                 INCLUDE ./assist09/flex_bootstrap.sym
     D3E7             (lex_bootstrap.sym):00001         IHNDLR  equ     54247
     F75D             (lex_bootstrap.sym):00002         SSTRING equ     63325
     D3F3             (lex_bootstrap.sym):00003         MONITR  equ     54259
     D38F             (lex_bootstrap.sym):00004         STATUS  equ     54159
     D3EF             (lex_bootstrap.sym):00005         TMON    equ     54255
     F729             (lex_bootstrap.sym):00006         STRAP3  equ     63273
     F720             (lex_bootstrap.sym):00007         STRAP2  equ     63264
     D37E             (lex_bootstrap.sym):00008         INCHR   equ     54142
     F713             (lex_bootstrap.sym):00009         STRAP1  equ     63251
     D3EB             (lex_bootstrap.sym):00010         IRQVEC  equ     54251
     D370             (lex_bootstrap.sym):00011         TRINIT  equ     54128
     D3F1             (lex_bootstrap.sym):00012         TMINT   equ     54257
     D3ED             (lex_bootstrap.sym):00013         TMOFF   equ     54253
     F837             (lex_bootstrap.sym):00014         MON09   equ     63543
     D371             (lex_bootstrap.sym):00015         INNECH  equ     54129
     A009             (lex_bootstrap.sym):00016         FLPREA  equ     40969
     D382             (lex_bootstrap.sym):00017         OTCHR2  equ     54146
     F700             (lex_bootstrap.sym):00018         STRAP   equ     63232
     A00A             (lex_bootstrap.sym):00019         FLPSTA  equ     40970
     D3FB             (lex_bootstrap.sym):00020         INCH    equ     54267
     A006             (lex_bootstrap.sym):00021         FLPSEL  equ     40966
     D399             (lex_bootstrap.sym):00022         TON     equ     54169
     A011             (lex_bootstrap.sym):00023         NULL    equ     40977
     A007             (lex_bootstrap.sym):00024         FLPTRK  equ     40967
     D399             (lex_bootstrap.sym):00025         TOFF    equ     54169
     D3F5             (lex_bootstrap.sym):00026         TINIT   equ     54261
     D380             (lex_bootstrap.sym):00027         OTCHR   equ     54144
     D399             (lex_bootstrap.sym):00028         TINT    equ     54169
     F73C             (lex_bootstrap.sym):00029         ESTRING equ     63292
     C100             (lex_bootstrap.sym):00030         LDAREA  equ     49408
     A000             (lex_bootstrap.sym):00031         ACIA    equ     40960
     D3E9             (lex_bootstrap.sym):00032         SWIVEC  equ     54249
     F73B             (lex_bootstrap.sym):00033         DONE    equ     63291
     D3F9             (lex_bootstrap.sym):00034         OUTCH   equ     54265
     A008             (lex_bootstrap.sym):00035         FLPSEC  equ     40968
     F731             (lex_bootstrap.sym):00036         ERPR    equ     63281
     D3E5             (lex_bootstrap.sym):00037         INCHNE  equ     54245
     D39A             (lex_bootstrap.sym):00038         IHND    equ     54170
     D3F7             (lex_bootstrap.sym):00039         STAT    equ     54263
                      (        qload.asm):00017         
                      (        qload.asm):00018                 * TRANSFER A,B AND SET FLAGS
0000                  (        qload.asm):00019         TAB         MACRO
                      (        qload.asm):00020                     TFR     A,B             
                      (        qload.asm):00021                     TSTA    
                      (        qload.asm):00022                     ENDM
                      (        qload.asm):00023         
                      (        qload.asm):00024                 * EQUATES
                      (        qload.asm):00025         
     C07F             (        qload.asm):00026         STACK       EQU     $C07F
     DE00             (        qload.asm):00027         READ        EQU     $DE00
     DE09             (        qload.asm):00028         RESTORE     EQU     $DE09
     DE09             (        qload.asm):00029         DRIVE       EQU     $DE09
     C300             (        qload.asm):00030         SCTBUF      EQU     $C300       ; DATA SECTOR BUFFER
                      (        qload.asm):00031         
                      (        qload.asm):00032                 * START OF UTILITY
                      (        qload.asm):00033         
                      (        qload.asm):00034                     ORG     $C100
C100 2008             (        qload.asm):00035         QLOAD       BRA     LOAD0
                      (        qload.asm):00036         
                      (        qload.asm):00037                 * PRE-Loaded Values
                      (        qload.asm):00038         
C102 000000           (        qload.asm):00039                     FCB     0,0,0
C105 01               (        qload.asm):00040         TRK         FCB     $01        ; FILE START TRACK
C106 01               (        qload.asm):00041         SCT         FCB     $01        ; FILE START SECTOR
C107 00               (        qload.asm):00042         DNS         FCB     0          ; DENSITY FLAG
C108 0000             (        qload.asm):00043         LADR        FDB     0          ; LOAD ADDRESS
                      (        qload.asm):00044         
                      (        qload.asm):00045         
C10A 10CEC07F         (        qload.asm):00046         LOAD0       LDS     #STACK      ; SETUP STACK
C10E 8EC300           (        qload.asm):00047                     LDX     #SCTBUF     ; POINT TO FCB
C111 6F03             (        qload.asm):00048                     CLR     3,X         ; SET FOR DRIVE 0
C113 BDDE09           (        qload.asm):00049                     JSR     DRIVE       ; SELECT DRIVE 0
C116 8EC300           (        qload.asm):00050                     LDX     #SCTBUF
C119 BDDE09           (        qload.asm):00051                     JSR     RESTORE     ; NOW RESTORE TO TRACK 0
C11C FCC105           (        qload.asm):00052                     LDD     TRK         ; SETUP STARTING TRK & SCT
C11F FDC300           (        qload.asm):00053                     STD     SCTBUF
C122 108EC400         (        qload.asm):00054                     LDY     #SCTBUF+256
                      (        qload.asm):00055         
                      (        qload.asm):00056                 * PERFORM ACTUAL FILE LOAD
                      (        qload.asm):00057         
C126 8D2F             (        qload.asm):00058         LOAD1       BSR     GETCH       ; GET A CHARACTER
C128 8102             (        qload.asm):00059                     CMPA    #$02        ; DATA RECORD HEADER?
C12A 270A             (        qload.asm):00060                     BEQ     LOAD2       ; SKIP IF SO
C12C 8116             (        qload.asm):00061                     CMPA    #$16        ; XFR ADDRESS HEADER?
C12E 26F6             (        qload.asm):00062                     BNE     LOAD1       ; LOOP IF NEITHER
C130 8D25             (        qload.asm):00063                     BSR     GETCH       ; GET TRANSFER ADDRESS
C132 8D23             (        qload.asm):00064                     BSR     GETCH       ; DISCARD IT
C134 20F0             (        qload.asm):00065                     BRA     LOAD1       ; CONTINUE LOAD
C136 8D1F             (        qload.asm):00066         LOAD2       BSR     GETCH       ; GET LOAD ADDRESS
C138 B7C108           (        qload.asm):00067                     STA     LADR
C13B 8D1A             (        qload.asm):00068                     BSR     GETCH
C13D B7C109           (        qload.asm):00069                     STA     LADR+1
C140 8D15             (        qload.asm):00070                     BSR     GETCH       ; GET BYTE COUNT
                      (        qload.asm):00071                     TAB                 ; PUT IN B (6800 numonic from listing)
C142 1F89             (              TAB):00001                     TFR     A,B             
C144 4D               (              TAB):00002                     TSTA    
C145 27DF             (        qload.asm):00072                     BEQ     LOAD1       ; LOOP IF COUNT=0
C147 BEC108           (        qload.asm):00073                     LDX     LADR        ; GET LOAD ADDRESS IN X
C14A 3414             (        qload.asm):00074         LOAD3       PSHS    B,X
C14C 8D09             (        qload.asm):00075                     BSR     GETCH       ; GET A DATA CHARACTER
C14E 3514             (        qload.asm):00076                     PULS    B,X
C150 A780             (        qload.asm):00077                     STA     ,X+         ; PUT CHARACTER
C152 5A               (        qload.asm):00078                     DECB                ; END OF DATA IN RECORD?
C153 26F5             (        qload.asm):00079                     BNE     LOAD3       ; LOOP IF NOT
C155 20CF             (        qload.asm):00080                     BRA     LOAD1       ; GET ANOTHER RECORD
                      (        qload.asm):00081         
                      (        qload.asm):00082                 * GET CHARACTER ROUTINE - READS A SECTOR IF NECESSARY
                      (        qload.asm):00083         
C157 108CC400         (        qload.asm):00084         GETCH       CMPY    #SCTBUF+256 ; QUT OF DATA?
C15B 2610             (        qload.asm):00085                     BNE     GETCH4      ; GO READ CHARACTER IF NOT
C15D 8EC300           (        qload.asm):00086         GETCH2      LDX     #SCTBUF     ; POINT TO BUFFER
C160 EC84             (        qload.asm):00087                     LDD     ,X          ; GET FORWARD LINK
C162 270C             (        qload.asm):00088                     BEQ     GO          ; IF ZERO, FILE IS LOADED
C164 BDDE00           (        qload.asm):00089                     JSR     READ        ; READ NEXT SECTOR
C167 2697             (        qload.asm):00090                     BNE     QLOAD       ; START OVER IF ERROR
C169 108EC304         (        qload.asm):00091                     LDY     #SCTBUF+4   ; POINT PAST LINK
C16D A6A0             (        qload.asm):00092         GETCH4      LDA     ,Y+         ; ELSE, GET A CHARACTER
C16F 39               (        qload.asm):00093                             RTS
                      (        qload.asm):00094         
                      (        qload.asm):00095                 * FILE IS LOADED, RETURN TO MONITOR
                      (        qload.asm):00096         
C170 8EC179           (        qload.asm):00097         GO          LDX    #FLEAD                       
C173 BDF731           (        qload.asm):00098                     JSR    ERPR         ; string printer rom bootstrap rom
                      (        qload.asm):00099         
C176 7ECD00           (        qload.asm):00100                     JMP    $CD00        ; JUMP TO FLEX
                      (        qload.asm):00101         
C179 464C455820414441 (        qload.asm):00102         FLEAD           FCC     "FLEX ADAPTATION FOR THE HB63C09M SBC QLOAD V1 (5/4/2025)"
     50544154494F4E20
     464F522054484520
     484236334330394D
     2053424320514C4F
     4144205631202835
     2F342F3230323529
C1B1 0D0A00           (        qload.asm):00103                         FCB     $0D,$0A,$00
